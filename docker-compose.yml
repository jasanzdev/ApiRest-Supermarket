version: "3.8"

services:
  redis:
    container_name: redis
    image: redis:7.4-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/var/lib/redis/data
    networks:
      - app-network

  mongodb:
    container_name: mongodb
    image: mongo:8.0.6-noble
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: Mongo123
    volumes:
      - ./mongo_data:/data/db

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: Mongo123
      ME_CONFIG_MONGODB_URL: mongodb://admin:Mongo123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false

  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Postgres123
      POSTGRES_DB: supermarket
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./query-postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  authenticate:
    build: ./microservices/authenticate
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:Postgres123@postgres:5432/supermarket
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - postgres
    networks:
      - app-network

  products:
    build: ./microservices/products
    ports:
      - "4001:4001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:Postgres123@postgres:5432/supermarket
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - postgres
    networks:
      - app-network

  users:
    build: ./microservices/users
    ports:
      - "4002:4002"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:Postgres123@postgres:5432/supermarket
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - postgres
    networks:
      - app-network

  order-processing:
    build: ./microservices/order-processing
    ports:
      - "4003:4003"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:Postgres123@postgres:5432/supermarket
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - postgres
    networks:
      - app-network

  gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - authenticate
      - products
      - users
      - order-processing
    networks:
      - app-network

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  mongo-data:
    driver: local

networks:
  app-network:
    driver: bridge
